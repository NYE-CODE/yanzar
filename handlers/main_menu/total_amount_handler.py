from aiogram import types
from aiogram.dispatcher.filters import Text
from aiogram.dispatcher import FSMContext
from keyboards.menu_keyboard import menu_buttons
from keyboards.back_keyboard import back_keyboard
from config.bot_config import dp
from sqlite_db import get_total_amount
from datetime import datetime


@dp.message_handler(Text(equals="–í—ã—Ä—É—á–∫–∞ üí∞"))
async def view_rentals(message: types.Message, state: FSMContext):
    current_date = datetime.now().strftime('%Y-%m-%d')

    try:
        amount = await get_total_amount()
        number = amount[0][0]
        if not amount:
            await message.answer(f"–°–µ–≥–æ–¥–Ω—è {current_date} –Ω–µ –±—ã–ª–æ –ø—Ä–æ–∫–∞—Ç–∞.")
            return

        await message.answer(f"üí∞ {current_date} üí∞"
                             f"\n–í—ã—Ä—É—á–∫–∞ {number} —Ä—É–±–ª–µ–π ")
        await message.answer("–ü–æ –∑–∞–≤–µ—Ä—à–µ–Ω–∏—é –≤–µ—Ä–Ω–∏—Ç–µ—Å—å –Ω–∞–∑–∞–¥:", reply_markup=back_keyboard)

    except Exception as e:
        await message.answer("–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        print(f"–û—à–∏–±–∫–∞: {e}")



@dp.message_handler(Text(equals="–ù–∞–∑–∞–¥ üîô"), state="*")
async def back_command(message: types.Message, state: FSMContext):
    if state is not None:
        await state.reset_state()

    last_message = message.message_id - 2
    await message.bot.delete_message(chat_id=message.chat.id, message_id=last_message)
    await message.answer("–í—ã –≤—ã—à–ª–∏ –∏–∑ —Å–ø–∏—Å–∫–∞ –∞—Ä–µ–Ω–¥", reply_markup=menu_buttons)



